{
    "actions": {
        "customise": "Customize",
        "add_sub_groups": "Add Sub-Groups",
        "add": "Add",
        "add_directory": "Add Directory",
        "add_entity": "Add {entityType}",
        "add_manual_date": "Add manual date",
        "add_o": "Add O",
        "add_play": "Add play",
        "rename_gen_files": "Rename generated files",
        "reset_cover": "Restore Default Cover",
        "reshuffle": "Reshuffle",
        "scan": "Scan",
        "scrape_scene_fragment": "Scrape by fragment",
        "scrape_with": "Scrape with…",
        "reset_play_duration": "Reset play duration",
        "reset_resume_time": "Reset resume time",
        "search": "Search",
        "select_all": "Select All",
        "select_entity": "Select {entityType}",
        "set_cover": "Set as Cover",
        "unset": "Unset",
        "use_default": "Use default",
        "view_random": "View Random",
        "delete_file": "Delete file",
        "download": "Download",
        "edit_entity": "Edit {entityType}",
        "enable": "Enable",
        "export": "Export",
        "export_all": "Export all…",
        "find": "Find",
        "finish": "Finish",
        "from_file": "From file…",
        "from_url": "From URL…",
        "full_export": "Full Export",
        "full_import": "Full Import",
        "generate": "Generate",
        "generate_thumb_default": "Generate default thumbnail",
        "generate_thumb_from_current": "Generate thumbnail from current",
        "hide": "Hide",
        "hide_configuration": "Hide Configuration",
        "identify": "Identify",
        "ignore": "Ignore",
        "import": "Import…",
        "import_from_file": "Import from file",
        "logout": "Log out",
        "make_primary": "Make Primary",
        "merge": "Merge",
        "merge_from": "Merge from",
        "merge_into": "Merge into",
        "migrate_blobs": "Migrate Blobs",
        "not_running": "not running",
        "open_in_external_player": "Open in external player",
        "open_random": "Open Random",
        "optimise_database": "Optimize Database",
        "overwrite": "Overwrite",
        "play_random": "Play Random",
        "play_selected": "Play selected",
        "preview": "Preview",
        "previous_action": "Back",
        "reassign": "Reassign",
        "refresh": "Refresh",
        "reload": "Reload",
        "reload_plugins": "Reload plugins",
        "remove_from_containing_group": "Remove from Group",
        "rescan": "Rescan",
        "select_folders": "Select folders",
        "select_none": "Select None",
        "selective_scan": "Selective Scan",
        "set_back_image": "Back image…",
        "set_front_image": "Front image…",
        "set_image": "Set image…",
        "show": "Show",
        "show_configuration": "Show Configuration",
        "split": "Split",
        "stop": "Stop",
        "submit": "Submit",
        "submit_stash_box": "Submit to Stash-Box",
        "submit_update": "Submit update",
        "swap": "Swap",
        "tasks": {
            "clean_confirm_message": "Are you sure you want to Clean? This will delete database information and generated content for all scenes and galleries that are no longer found in the filesystem.",
            "dry_mode_selected": "Dry Mode selected. No actual deleting will take place, only logging.",
            "import_warning": "Are you sure you want to import? This will delete the database and re-import from your exported metadata."
        },
        "temp_disable": "Disable temporarily…",
        "temp_enable": "Enable temporarily…",
        "allow": "Allow",
        "auto_tag": "Auto Tag",
        "backup": "Backup",
        "browse_for_image": "Browse for image…",
        "cancel": "Cancel",
        "choose_date": "Choose a date",
        "clean": "Clean",
        "clean_generated": "Clean generated files",
        "clear_date_data": "Clear date data",
        "clear_front_image": "Clear front image",
        "create_entity": "Create {entityType}",
        "create": "Create",
        "create_chapters": "Create Chapter",
        "created_entity": "Created {entity_type}: {entity_name}",
        "delete": "Delete",
        "delete_entity": "Delete {entityType}",
        "delete_file_and_funscript": "Delete file (and funscript)",
        "delete_generated_supporting_files": "Delete generated supporting files",
        "disable": "Disable",
        "disallow": "Disallow",
        "download_anonymised": "Download anonymized",
        "download_backup": "Download Backup",
        "edit": "Edit",
        "encoding_image": "Encoding image…",
        "hash_migration": "hash migration",
        "migrate_scene_screenshots": "Migrate Scene Screenshots",
        "next_action": "Next",
        "reload_scrapers": "Reload scrapers",
        "remove": "Remove",
        "remove_date": "Remove date",
        "remove_from_gallery": "Remove from Gallery",
        "save": "Save",
        "save_delete_settings": "Use these options by default when deleting",
        "save_filter": "Save filter",
        "running": "running",
        "scrape": "Scrape",
        "scrape_query": "Scrape query",
        "selective_clean": "Selective Clean",
        "selective_auto_tag": "Selective Auto Tag",
        "set_as_default": "Set as default",
        "skip": "Skip",
        "view_history": "View history",
        "anonymise": "Anonymize",
        "apply": "Apply",
        "assign_stashid_to_parent_studio": "Assign Stash ID to existing parent studio and update metadata",
        "clear": "Clear",
        "clear_back_image": "Clear back image",
        "clear_image": "Clear Image",
        "close": "Close",
        "confirm": "Confirm",
        "continue": "Continue",
        "copy_to_clipboard": "Copy to clipboard",
        "create_marker": "Create Marker",
        "create_parent_studio": "Create parent studio",
        "add_to_entity": "Add to {entityType}",
        "allow_temporarily": "Allow temporarily",
        "play": "Play",
        "show_results": "Show results",
        "sidebar": {
            "toggle": "Toggle sidebar",
            "close": "Close sidebar",
            "open": "Open sidebar"
        },
        "show_count_results": "Show {count} results"
    },
    "config": {
        "tools": {
            "scene_filename_parser": {
                "ignore_organized": "Ignore organized scenes"
            }
        },
        "ui": {
            "custom_locales": {
                "heading": "Custom localization",
                "option_label": "Custom localization enabled"
            }
        },
        "general": {
            "auth": {
                "log_file_desc": "Path to the file to output logging to. Blank to disable file logging. Requires restart.",
                "username_desc": "Username to access Stash. Leave blank to disable user authentication",
                "api_key_desc": "API key for external systems. Only required when username/password is configured. Username must be saved before generating API key.",
                "authentication": "Authentication",
                "log_to_terminal": "Log to terminal",
                "log_http": "Log HTTP access",
                "log_http_desc": "Logs HTTP access to the terminal. Requires restart.",
                "maximum_session_age": "Maximum Session Age",
                "log_to_terminal_desc": "Logs to the terminal in addition to a file. Always true if file logging is disabled. Requires restart.",
                "password": "Password",
                "api_key": "API Key",
                "clear_api_key": "Clear API key",
                "credentials": {
                    "description": "Credentials to restrict access to stash.",
                    "heading": "Credentials"
                },
                "generate_api_key": "Generate API key",
                "log_file": "Log file",
                "maximum_session_age_desc": "Maximum idle time before a login session is expired, in seconds. Requires restart.",
                "password_desc": "Password to access Stash. Leave blank to disable user authentication",
                "stash-box_integration": "Stash-box integration",
                "username": "Username"
            },
            "calculate_md5_and_ohash_desc": "Calculate MD5 checksum in addition to oshash. Enabling will cause initial scans to be slower. File naming hash must be set to oshash to disable MD5 calculation.",
            "ffmpeg": {
                "ffmpeg_path": {
                    "description": "Path to the ffmpeg executable (not the folder). If empty, ffmpeg will be resolved from the environment via $PATH, the configuration directory, or from $HOME/.stash",
                    "heading": "FFmpeg Executable Path"
                },
                "live_transcode": {
                    "input_args": {
                        "desc": "Advanced: Additional arguments to pass to ffmpeg before the input field when live transcoding video.",
                        "heading": "FFmpeg Live Transcode Input Arguments"
                    },
                    "output_args": {
                        "desc": "Advanced: Additional arguments to pass to ffmpeg before the output field when live transcoding video.",
                        "heading": "FFmpeg Live Transcode Output Args"
                    }
                },
                "download_ffmpeg": {
                    "description": "Downloads FFmpeg into the configuration directory and clears the ffmpeg and ffprobe paths to resolve from the configuration directory.",
                    "heading": "Download FFmpeg"
                },
                "ffprobe_path": {
                    "description": "Path to the ffprobe executable (not the folder). If empty, ffprobe will be resolved from the environment via $PATH, the configuration directory, or from $HOME/.stash",
                    "heading": "FFprobe Executable Path"
                },
                "hardware_acceleration": {
                    "desc": "Uses available hardware to encode video for live transcoding.",
                    "heading": "FFmpeg Hardware Encoding"
                },
                "transcode": {
                    "input_args": {
                        "desc": "Advanced: Additional arguments to pass to ffmpeg before the input field when generating video.",
                        "heading": "FFmpeg transcode input arguments"
                    },
                    "output_args": {
                        "desc": "Advanced: Additional arguments to pass to ffmpeg before the output field when generating video.",
                        "heading": "FFmpeg transcode output arguments"
                    }
                }
            },
            "number_of_parallel_task_for_scan_generation_desc": "Set to 0 for auto-detection. Warning: running more tasks than is required to achieve 100% cpu utilization will decrease performance and potentially cause other issues.",
            "chrome_cdp_path_desc": "File path to the Chrome executable, or a remote address (starting with http:// or https://, for example http://localhost:9222/json/version) to a Chrome instance.",
            "blobs_path": {
                "description": "Where in the filesystem to store binary data. Applicable only when using the Filesystem blob storage type. WARNING: changing this requires manually moving existing data.",
                "heading": "Binary data filesystem path"
            },
            "funscript_heatmap_draw_range_desc": "Draw range of motion on the y-axis of the generated heatmap. Existing heatmaps will need to be regenerated after changing.",
            "generated_file_naming_hash_desc": "Use MD5 or oshash for generated file naming. Changing this requires that all scenes have the applicable MD5/oshash value populated. After changing this value, existing generated files will need to be migrated or regenerated. See Tasks page for migration.",
            "hashing": "Hashing",
            "gallery_ext_head": "Gallery zip extensions",
            "gallery_cover_regex_label": "Gallery cover pattern",
            "generated_files_location": "Directory location for the generated files (scene markers, scene previews, sprites, etc)",
            "blobs_storage": {
                "heading": "Binary data storage type",
                "description": "Where to store binary data such as scene covers, performer, studio and tag images. After changing this value, the existing data must be migrated using the Migrate Blobs tasks. See Tasks page for migration."
            },
            "cache_path_head": "Cache Path",
            "calculate_md5_and_ohash_label": "Calculate MD5 for videos",
            "check_for_insecure_certificates": "Check for insecure certificates",
            "check_for_insecure_certificates_desc": "Some sites use insecure SSL certificates. When unticked, the scraper skips the insecure certificate check and allows scraping of those sites. If you get a certificate error when scraping, untick this.",
            "database": "Database",
            "excluded_image_gallery_patterns_desc": "Regular expressions of image and gallery files/paths to exclude from Scan and add to Clean",
            "db_path_head": "Database Path",
            "directory_locations_to_your_content": "Directory locations to your content",
            "metadata_path": {
                "heading": "Metadata Path",
                "description": "Directory location used when performing a full export or import"
            },
            "number_of_parallel_task_for_scan_generation_head": "Number of parallel tasks for scan/generation",
            "backup_directory_path": {
                "description": "Directory location for SQLite database file backups",
                "heading": "Backup Directory Path"
            },
            "cache_location": "Directory location of the cache. Required if streaming using HLS (such as on Apple devices) or DASH.",
            "chrome_cdp_path": "Chrome CDP path",
            "create_galleries_from_folders_desc": "If true, creates galleries from folders containing images by default. Create a file named .forcegallery or .nogallery in a folder to enforce/prevent this.",
            "create_galleries_from_folders_label": "Create galleries from folders containing images",
            "excluded_video_patterns_desc": "Regular expressions of video files/paths to exclude from Scan and add to Clean",
            "excluded_image_gallery_patterns_head": "Excluded Image/Gallery Patterns",
            "excluded_video_patterns_head": "Excluded Video Patterns",
            "funscript_heatmap_draw_range": "Include range in generated heatmaps",
            "gallery_cover_regex_desc": "Regular expression used to identify an image as gallery cover",
            "gallery_ext_desc": "Comma-delimited list of file extensions that will be identified as gallery zip files.",
            "generated_file_naming_hash_head": "Generated file naming hash",
            "generated_path_head": "Generated Path",
            "heatmap_generation": "Funscript heatmap generation",
            "image_ext_desc": "Comma-delimited list of file extensions that will be identified as images.",
            "image_ext_head": "Image extensions",
            "include_audio_desc": "Includes audio stream when generating previews.",
            "include_audio_head": "Include audio",
            "logging": "Logging",
            "maximum_streaming_transcode_size_desc": "Maximum size for transcoded streams",
            "maximum_streaming_transcode_size_head": "Maximum streaming transcode size",
            "maximum_transcode_size_desc": "Maximum size for generated transcodes",
            "maximum_transcode_size_head": "Maximum transcode size",
            "parallel_scan_head": "Parallel Scan/Generation",
            "python_path": {
                "heading": "Python Executable Path",
                "description": "Path to the python executable (not just the folder). Used for script scrapers and plugins. If blank, python will be resolved from the environment"
            },
            "plugins_path": {
                "description": "Directory location of plugin configuration files",
                "heading": "Plugins Path"
            },
            "preview_generation": "Preview Generation",
            "scraper_user_agent": "Scraper User Agent"
        },
        "categories": {
            "scraping": "Scraping",
            "changelog": "Changelog",
            "logs": "Logs",
            "metadata_providers": "Metadata Providers",
            "services": "Services",
            "system": "System",
            "tasks": "Tasks",
            "tools": "Tools",
            "about": "About",
            "interface": "Interface",
            "plugins": "Plugins",
            "security": "Security"
        },
        "dlna": {
            "network_interfaces_desc": "Interfaces to expose DLNA server on. An empty list results in running on all interfaces. Requires DLNA restart after changing.",
            "allowed_ip_addresses": "Allowed IP addresses",
            "default_ip_whitelist_desc": "Default IP addresses allow to access DLNA. Use {wildcard} to allow all IP addresses.",
            "enabled_by_default": "Enabled by default",
            "enabled_dlna_temporarily": "Enabled DLNA temporarily",
            "server_display_name_desc": "Display name for the DLNA server. Defaults to {server_name} if empty.",
            "allow_temp_ip": "Allow {tempIP}",
            "network_interfaces": "Interfaces",
            "recent_ip_addresses": "Recent IP addresses",
            "allowed_ip_temporarily": "Allowed IP temporarily",
            "default_ip_whitelist": "Default IP Whitelist",
            "disabled_dlna_temporarily": "Disabled DLNA temporarily",
            "disallowed_ip": "Disallowed IP",
            "server_display_name": "Server Display Name",
            "server_port": "Server Port",
            "server_port_desc": "Port to run the DLNA server on. Requires DLNA restart after changing.",
            "successfully_cancelled_temporary_behaviour": "Successfully cancelled temporary behaviour",
            "until_restart": "until restart",
            "video_sort_order": "Default Video Sort Order",
            "video_sort_order_desc": "Order to sort videos by default."
        },
        "about": {
            "release_date": "Release date:",
            "stash_open_collective": "Support us through {url}",
            "stash_wiki": "Stash {url} page",
            "build_hash": "Build hash:",
            "build_time": "Build time:",
            "check_for_new_version": "Check for new version",
            "latest_version": "Latest Version",
            "latest_version_build_hash": "Latest Version Build Hash:",
            "new_version_notice": "[NEW]",
            "stash_discord": "Join our {url} channel",
            "stash_home": "Stash home at {url}",
            "version": "Version"
        },
        "advanced_mode": "Advanced Mode",
        "application_paths": {
            "heading": "Application Paths"
        }
    },
    "eye_color": "Eye Color",
    "favourite": "Favorite",
    "hair_color": "Hair Color",
    "organized": "Organized",
    "performer_favorite": "Performer Favorited",
    "component_tagger": {
        "verb_submit_fp": "Submit {fpCount, plural, one{# Fingerprint} other{# Fingerprints}}",
        "config": {
            "set_tag_desc": "Attach tags to scene, either by overwriting or merging with existing tags on scene.",
            "blacklist_desc": "Blacklist items are excluded from queries. Note that they are regular expressions and also case-insensitive. Certain characters must be escaped with a backslash: {chars_require_escape}",
            "set_cover_label": "Set scene cover image",
            "query_mode_label": "Query Mode",
            "set_tag_label": "Set tags",
            "query_mode_dir_desc": "Only uses parent directory of video file",
            "active_instance": "Active stash-box instance:",
            "blacklist_label": "Blacklist",
            "mark_organized_desc": "Immediately mark the scene as Organized after the Save button is clicked.",
            "query_mode_dir": "Dir",
            "query_mode_filename_desc": "Only uses filename",
            "query_mode_metadata": "Metadata",
            "query_mode_metadata_desc": "Only uses metadata",
            "mark_organized_label": "Mark as Organized on save",
            "query_mode_auto": "Auto",
            "query_mode_auto_desc": "Uses metadata if present, or filename",
            "query_mode_filename": "Filename",
            "query_mode_path": "Path",
            "query_mode_path_desc": "Uses entire file path",
            "set_cover_desc": "Replace the scene cover if one is found.",
            "show_male_desc": "Toggle whether male performers will be available to tag.",
            "show_male_label": "Show male performers",
            "source": "Source",
            "errors": {
                "blacklist_duplicate": "Duplicate blacklist item"
            }
        },
        "verb_matched": "Matched",
        "results": {
            "fp_matches": "Duration is a match",
            "duration_off": "Duration off by at least {number}s",
            "duration_unknown": "Duration unknown",
            "fp_found": "{fpCount, plural, =0 {No new fingerprint matches found} other {# new fingerprint matches found}}",
            "fp_matches_multi": "Duration matches {matchCount}/{durationsLength} fingerprints",
            "hash_matches": "{hash_type} is a match",
            "match_failed_already_tagged": "Scene already tagged",
            "match_failed_no_result": "No results found",
            "match_success": "Scene successfully tagged",
            "phash_matches": "{count} PHashes match",
            "unnamed": "Unnamed"
        },
        "noun_query": "Query",
        "verb_match_fp": "Match Fingerprints",
        "verb_toggle_unmatched": "{toggle} unmatched scenes",
        "verb_scrape_all": "Scrape All",
        "verb_toggle_config": "{toggle} {configuration}"
    },
    "ascending": "Ascending",
    "audio_codec": "Audio Codec",
    "average_resolution": "Average Resolution",
    "between_and": "and",
    "chapters": "Chapters",
    "circumcised": "Circumcised",
    "birthdate": "Birthdate",
    "career_length": "Career Length",
    "circumcised_types": {
        "CUT": "Cut",
        "UNCUT": "Uncut"
    },
    "birth_year": "Birth Year",
    "age": "Age",
    "actions_name": "Actions",
    "also_known_as": "Also known as",
    "appears_with": "Appears With",
    "bitrate": "Bit Rate",
    "blobs_storage_type": {
        "database": "Database",
        "filesystem": "Filesystem"
    },
    "captions": "Captions",
    "age_on_date": "{age} at production",
    "aliases": "Aliases",
    "all": "all"
}
