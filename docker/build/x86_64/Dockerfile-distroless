# This dockerfile should be built with `make docker-cuda-build` from the stash root.

# Build GQL
FROM node:lts AS gqlgen
RUN npm i -g corepack --force && corepack install -g yarn && corepack enable
WORKDIR /stash
RUN --mount=type=cache,id=yarn,target=/home/root/.yarn \
    --mount=type=bind,source=./Makefile,target=/stash/Makefile \
    --mount=type=bind,source=./ui/v2.5/package.json,target=/stash/ui/v2.5/package.json \
    --mount=type=bind,source=./ui/v2.5/yarn.lock,target=/stash/ui/v2.5/yarn.lock \
    make pre-ui
RUN --mount=type=bind,source=./Makefile,target=/stash/Makefile \
    --mount=type=bind,source=./ui/v2.5/package.json,target=/stash/ui/v2.5/package.json \
    --mount=type=bind,source=./ui/v2.5/yarn.lock,target=/stash/ui/v2.5/yarn.lock \
    --mount=type=bind,source=./graphql/,target=/stash/graphql \
    --mount=type=bind,source=./ui/v2.5/graphql/,target=/stash/ui/v2.5/graphql \
    --mount=type=bind,source=./ui/v2.5/codegen.ts,target=/stash/ui/v2.5/codegen.ts \
    make generate-ui

# Build Frontend
FROM node:lts AS frontend
RUN npm i -g corepack --force && corepack install -g yarn && corepack enable
WORKDIR /stash
RUN --mount=type=cache,id=yarn,target=/home/root/.yarn \
    --mount=type=bind,source=./Makefile,target=/stash/Makefile \
    --mount=type=bind,source=./ui/v2.5/package.json,target=/stash/ui/v2.5/package.json \
    --mount=type=bind,source=./ui/v2.5/yarn.lock,target=/stash/ui/v2.5/yarn.lock \
    make pre-ui
ARG GITHASH
ARG STASH_VERSION
COPY ./ui/v2.5/src /stash/ui/v2.5/src/
RUN --mount=type=bind,source=./.git,target=/stash/.git \
    --mount=type=bind,source=./Makefile,target=/stash/Makefile \
    --mount=type=bind,source=./ui/v2.5/public,target=/stash/ui/v2.5/public \
    --mount=type=bind,source=./ui/v2.5/package.json,target=/stash/ui/v2.5/package.json \
    --mount=type=bind,source=./ui/v2.5/yarn.lock,target=/stash/ui/v2.5/yarn.lock \
    --mount=type=bind,source=./ui/v2.5/index.html,target=/stash/ui/v2.5/index.html \
    --mount=type=bind,source=./ui/v2.5/vite.config.js,target=/stash/ui/v2.5/vite.config.js \
    --mount=type=bind,source=./ui/v2.5/tsconfig.json,target=/stash/ui/v2.5/tsconfig.json \
    --mount=type=bind,from=gqlgen,source=/stash/ui/v2.5/src/core/generated-graphql.ts,target=/stash/ui/v2.5/src/core/generated-graphql.ts \
    BUILD_DATE=$(date +"%Y-%m-%d %H:%M:%S") make ui

# Build Backend
FROM golang:1.24 AS backend
WORKDIR /stash
COPY go.mod go.sum /stash/
COPY ./internal /stash/internal
RUN --mount=type=cache,id=go,target=/root/.cache/go-build \
    --mount=type=bind,source=./Makefile,target=/stash/Makefile \
    --mount=type=bind,source=./gqlgen.yml,target=/stash/gqlgen.yml \
    --mount=type=bind,source=./.gqlgenc.yml,target=/stash/.gqlgenc.yml \
    --mount=type=bind,source=./cmd,target=/stash/cmd \
    --mount=type=bind,source=./pkg,target=/stash/pkg \
    --mount=type=bind,source=./ui,target=/stash/ui \
    --mount=type=bind,source=./graphql/,target=/stash/graphql \
    go generate ./cmd/stash
ARG GITHASH
ARG STASH_VERSION
COPY --from=frontend /stash/ui/v2.5/build /stash/ui/v2.5/build
RUN --mount=type=cache,id=go,target=/root/.cache/go-build \
    --mount=type=bind,source=./.git,target=/stash/.git \
    --mount=type=bind,source=./Makefile,target=/stash/Makefile \
    --mount=type=bind,source=./scripts,target=/stash/scripts \
    --mount=type=bind,source=./pkg,target=/stash/pkg \
    --mount=type=bind,source=./cmd,target=/stash/cmd \
    --mount=type=bind,source=./ui/login,target=/stash/ui/login \
    --mount=type=bind,source=./ui/ui.go,target=/stash/ui/ui.go \
    CGO_ENABLED=0 make flags-release flags-pie stash

# Build a virtualenv using the appropriate Debian release
FROM debian:12-slim AS build-venv
RUN apt-get update && \
    apt-get install --no-install-suggests --no-install-recommends --yes python3-venv gcc libpython3-dev && \
    python3 -m venv /venv && \
    /venv/bin/pip install --upgrade pip setuptools wheel requests

# Final Runnable Image
FROM gcr.io/distroless/python3-debian12
COPY --link --from=build-venv /venv /venv
COPY --link --from=backend /stash/stash /usr/bin/
ENV STASH_CONFIG_FILE=/root/.stash/config.yml
EXPOSE 9999
ENTRYPOINT ["stash"]
